;; Works with p2_singleton_via_delegated_puzzle
;; When we have many p2_singleton coins and want to aggregate them together

(mod (my_id my_puzhash list_of_coin_id_amounts my_amount)

  (include condition_codes.clib)
  (include curry-and-treehash.clib)

  (defun cons_announcements_to_output(coin_id output)
    (c
      (list CREATE_PUZZLE_ANNOUNCEMENT coin_id)
      output
    )
  )

  (defun for_coin_id_amounts (my_puzhash list_of_coin_id_amounts total)
    (if list_of_coin_id_amounts
        (cons_announcements_to_output
          (calculate_coin_id (f (f list_of_coin_id_amounts)) my_puzhash (f (r (f list_of_coin_id_amounts))))  ; asserts that all the coins have the same puzzle as me
          (for_coin_id_amounts my_puzhash (r list_of_coin_id_amounts) (+ total (f (r (f list_of_coin_id_amounts)))))
        )
        (list
          (list ASSERT_HEIGHT_RELATIVE 5)  ; TODO: should this be higher or lower?
          (list CREATE_COIN my_puzhash total)
        )
    )
  )

  (defun-inline give_self_to_merge (my_puzhash my_id)
    (list
      (list ASSERT_PUZZLE_ANNOUNCEMENT (sha256 my_puzhash my_id))
      (list CREATE_COIN_ANNOUNCEMENT 0)
    )
  )

  (c
    (list ASSERT_MY_PUZZLEHASH my_puzhash)
    (if list_of_coin_id_amounts
	; we are making the output
	(c
	  (list ASSERT_MY_ID my_id)
	  (for_coin_id_amounts my_puzhash list_of_coin_id_amounts my_amount)
	)
	; we are letting another coin make the output
	(give_self_to_merge my_puzhash my_id)
    )
  )

)